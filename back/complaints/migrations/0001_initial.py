# Generated by Django 5.2.5 on 2025-10-08 14:04

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('vehicles', '0003_vehicle_updated_by'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Complaint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vehicle_plate', models.CharField(db_index=True, help_text='Placa informada na denúncia', max_length=10, verbose_name='Placa do Veículo')),
                ('complaint_type', models.CharField(choices=[('excesso_velocidade', 'Excesso de Velocidade'), ('direcao_perigosa', 'Direção Perigosa'), ('uso_celular', 'Uso de Celular ao Dirigir'), ('veiculo_mal_conservado', 'Veículo Mal Conservado'), ('desrespeito_sinalizacao', 'Desrespeito à Sinalização'), ('embriaguez', 'Suspeita de Embriaguez'), ('estacionamento_irregular', 'Estacionamento Irregular'), ('poluicao_sonora', 'Poluição Sonora'), ('poluicao_ambiental', 'Poluição Ambiental'), ('outros', 'Outros')], help_text='Categoria da irregularidade denunciada', max_length=50, verbose_name='Tipo de Denúncia')),
                ('description', models.TextField(help_text='Descrição detalhada do ocorrido (mínimo 20 caracteres)', verbose_name='Descrição da Denúncia')),
                ('occurrence_date', models.DateField(blank=True, help_text='Data em que o fato ocorreu', null=True, verbose_name='Data da Ocorrência')),
                ('occurrence_location', models.CharField(blank=True, help_text='Endereço ou local onde ocorreu o fato', max_length=255, null=True, verbose_name='Local da Ocorrência')),
                ('complainant_name', models.CharField(blank=True, help_text='Nome completo do denunciante (opcional)', max_length=150, null=True, verbose_name='Nome do Denunciante')),
                ('complainant_email', models.EmailField(blank=True, help_text='Email de contato do denunciante (opcional)', max_length=254, null=True, verbose_name='Email do Denunciante')),
                ('complainant_phone', models.CharField(blank=True, help_text='Telefone de contato do denunciante (opcional)', max_length=20, null=True, verbose_name='Telefone do Denunciante')),
                ('is_anonymous', models.BooleanField(default=False, help_text='Indica se a denúncia foi feita anonimamente', verbose_name='Denúncia Anônima')),
                ('status', models.CharField(choices=[('pendente', 'Pendente'), ('em_analise', 'Em Análise'), ('resolvida', 'Resolvida'), ('arquivada', 'Arquivada')], db_index=True, default='pendente', help_text='Status atual da denúncia', max_length=20, verbose_name='Status')),
                ('priority', models.CharField(choices=[('baixa', 'Baixa'), ('media', 'Média'), ('alta', 'Alta'), ('urgente', 'Urgente')], db_index=True, default='media', help_text='Nível de prioridade da denúncia', max_length=20, verbose_name='Prioridade')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Data e hora em que a denúncia foi registrada', verbose_name='Data da Denúncia')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Data e hora da última modificação', verbose_name='Última Atualização')),
                ('reviewed_at', models.DateTimeField(blank=True, help_text='Data e hora em que a denúncia foi avaliada', null=True, verbose_name='Data da Avaliação')),
                ('admin_notes', models.TextField(blank=True, help_text='Notas e observações internas do administrador (não visível ao público)', null=True, verbose_name='Observações Internas')),
                ('resolution_notes', models.TextField(blank=True, help_text='Descrição de como a denúncia foi resolvida', null=True, verbose_name='Notas de Resolução')),
                ('reviewed_by', models.ForeignKey(blank=True, help_text='Administrador que avaliou a denúncia', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewed_complaints', to=settings.AUTH_USER_MODEL, verbose_name='Avaliado por')),
                ('vehicle', models.ForeignKey(blank=True, help_text='Veículo associado à denúncia (preenchido automaticamente se placa existir)', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='complaints', to='vehicles.vehicle', verbose_name='Veículo')),
            ],
            options={
                'verbose_name': 'Denúncia',
                'verbose_name_plural': 'Denúncias',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['status', '-created_at'], name='complaints__status_f077e8_idx'), models.Index(fields=['vehicle_plate'], name='complaints__vehicle_2d984d_idx'), models.Index(fields=['complaint_type'], name='complaints__complai_462a7a_idx'), models.Index(fields=['priority', 'status'], name='complaints__priorit_9b6e83_idx')],
            },
        ),
    ]

# Generated by Django 5.2.5 on 2025-10-24 17:26

from django.db import migrations, models


def generate_protocols_for_existing_complaints(apps, schema_editor):
    """
    Gera protocolos para todas as denúncias existentes.
    """
    Complaint = apps.get_model('complaints', 'Complaint')

    # Buscar todas as denúncias ordenadas por data de criação
    complaints = Complaint.objects.all().order_by('created_at')

    # Dicionário para controlar o contador por ano
    year_counters = {}

    for complaint in complaints:
        # Extrair o ano da data de criação
        year = complaint.created_at.year
        year_prefix = str(year)

        # Inicializar contador do ano se não existir
        if year not in year_counters:
            year_counters[year] = 1
        else:
            year_counters[year] += 1

        # Gerar protocolo
        protocol = f"{year_prefix}{year_counters[year]:04d}"
        complaint.protocol = protocol
        complaint.save(update_fields=['protocol'])


class Migration(migrations.Migration):

    dependencies = [
        ('complaints', '0003_update_status_choices'),
    ]

    operations = [
        migrations.AddField(
            model_name='complaint',
            name='protocol',
            field=models.CharField(blank=True, db_index=True, editable=False, help_text='Protocolo gerado automaticamente (formato: YYYYNNNN)', max_length=8, null=True, unique=True, verbose_name='Protocolo'),
        ),
        migrations.RunPython(generate_protocols_for_existing_complaints, migrations.RunPython.noop),
    ]
